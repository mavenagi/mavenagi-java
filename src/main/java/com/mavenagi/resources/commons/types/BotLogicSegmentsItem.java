/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.mavenagi.resources.commons.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.mavenagi.core.ObjectMappers;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = BotLogicSegmentsItem.Builder.class)
public final class BotLogicSegmentsItem {
    private final List<EntityId> matchingSegmentIds;

    private final Map<String, Object> additionalProperties;

    private BotLogicSegmentsItem(List<EntityId> matchingSegmentIds, Map<String, Object> additionalProperties) {
        this.matchingSegmentIds = matchingSegmentIds;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("matchingSegmentIds")
    public List<EntityId> getMatchingSegmentIds() {
        return matchingSegmentIds;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof BotLogicSegmentsItem && equalTo((BotLogicSegmentsItem) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(BotLogicSegmentsItem other) {
        return matchingSegmentIds.equals(other.matchingSegmentIds);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.matchingSegmentIds);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        private List<EntityId> matchingSegmentIds = new ArrayList<>();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        public Builder from(BotLogicSegmentsItem other) {
            matchingSegmentIds(other.getMatchingSegmentIds());
            return this;
        }

        @JsonSetter(value = "matchingSegmentIds", nulls = Nulls.SKIP)
        public Builder matchingSegmentIds(List<EntityId> matchingSegmentIds) {
            this.matchingSegmentIds.clear();
            this.matchingSegmentIds.addAll(matchingSegmentIds);
            return this;
        }

        public Builder addMatchingSegmentIds(EntityId matchingSegmentIds) {
            this.matchingSegmentIds.add(matchingSegmentIds);
            return this;
        }

        public Builder addAllMatchingSegmentIds(List<EntityId> matchingSegmentIds) {
            this.matchingSegmentIds.addAll(matchingSegmentIds);
            return this;
        }

        public BotLogicSegmentsItem build() {
            return new BotLogicSegmentsItem(matchingSegmentIds, additionalProperties);
        }
    }
}
