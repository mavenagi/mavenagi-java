/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.mavenagi.api.resources.commons.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.mavenagi.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = ConversationInformation.Builder.class)
public final class ConversationInformation {
    private final EntityIdWithoutAgent conversationId;

    private final Map<String, Object> additionalProperties;

    private ConversationInformation(EntityIdWithoutAgent conversationId, Map<String, Object> additionalProperties) {
        this.conversationId = conversationId;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return Unique identifier for the conversation.
     */
    @JsonProperty("conversationId")
    public EntityIdWithoutAgent getConversationId() {
        return conversationId;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof ConversationInformation && equalTo((ConversationInformation) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(ConversationInformation other) {
        return conversationId.equals(other.conversationId);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.conversationId);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static ConversationIdStage builder() {
        return new Builder();
    }

    public interface ConversationIdStage {
        _FinalStage conversationId(@NotNull EntityIdWithoutAgent conversationId);

        Builder from(ConversationInformation other);
    }

    public interface _FinalStage {
        ConversationInformation build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements ConversationIdStage, _FinalStage {
        private EntityIdWithoutAgent conversationId;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(ConversationInformation other) {
            conversationId(other.getConversationId());
            return this;
        }

        /**
         * <p>Unique identifier for the conversation.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("conversationId")
        public _FinalStage conversationId(@NotNull EntityIdWithoutAgent conversationId) {
            this.conversationId = Objects.requireNonNull(conversationId, "conversationId must not be null");
            return this;
        }

        @java.lang.Override
        public ConversationInformation build() {
            return new ConversationInformation(conversationId, additionalProperties);
        }
    }
}
