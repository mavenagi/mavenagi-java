/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.mavenagi.api.resources.conversation.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.mavenagi.api.core.ObjectMappers;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = ResponseConfig.Builder.class)
public final class ResponseConfig {
    private final List<Capability> capabilities;

    private final boolean isCopilot;

    private final ResponseLength responseLength;

    private final Map<String, Object> additionalProperties;

    private ResponseConfig(
            List<Capability> capabilities,
            boolean isCopilot,
            ResponseLength responseLength,
            Map<String, Object> additionalProperties) {
        this.capabilities = capabilities;
        this.isCopilot = isCopilot;
        this.responseLength = responseLength;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return List of capabilities supported by the caller. Defaults to everything except charts_highcharts_ts. Note that the forms and images capabilities are not respected at this time.
     */
    @JsonProperty("capabilities")
    public List<Capability> getCapabilities() {
        return capabilities;
    }

    /**
     * @return Whether the response is for an human agent (true) or an end user (false). Defaults to false.
     */
    @JsonProperty("isCopilot")
    public boolean getIsCopilot() {
        return isCopilot;
    }

    /**
     * @return The desired response length. Defaults to ResponseLength.MEDIUM.
     */
    @JsonProperty("responseLength")
    public ResponseLength getResponseLength() {
        return responseLength;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof ResponseConfig && equalTo((ResponseConfig) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(ResponseConfig other) {
        return capabilities.equals(other.capabilities)
                && isCopilot == other.isCopilot
                && responseLength.equals(other.responseLength);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.capabilities, this.isCopilot, this.responseLength);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static IsCopilotStage builder() {
        return new Builder();
    }

    public interface IsCopilotStage {
        ResponseLengthStage isCopilot(boolean isCopilot);

        Builder from(ResponseConfig other);
    }

    public interface ResponseLengthStage {
        _FinalStage responseLength(@NotNull ResponseLength responseLength);
    }

    public interface _FinalStage {
        ResponseConfig build();

        _FinalStage capabilities(List<Capability> capabilities);

        _FinalStage addCapabilities(Capability capabilities);

        _FinalStage addAllCapabilities(List<Capability> capabilities);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements IsCopilotStage, ResponseLengthStage, _FinalStage {
        private boolean isCopilot;

        private ResponseLength responseLength;

        private List<Capability> capabilities = new ArrayList<>();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(ResponseConfig other) {
            capabilities(other.getCapabilities());
            isCopilot(other.getIsCopilot());
            responseLength(other.getResponseLength());
            return this;
        }

        /**
         * <p>Whether the response is for an human agent (true) or an end user (false). Defaults to false.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("isCopilot")
        public ResponseLengthStage isCopilot(boolean isCopilot) {
            this.isCopilot = isCopilot;
            return this;
        }

        /**
         * <p>The desired response length. Defaults to ResponseLength.MEDIUM.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("responseLength")
        public _FinalStage responseLength(@NotNull ResponseLength responseLength) {
            this.responseLength = Objects.requireNonNull(responseLength, "responseLength must not be null");
            return this;
        }

        /**
         * <p>List of capabilities supported by the caller. Defaults to everything except charts_highcharts_ts. Note that the forms and images capabilities are not respected at this time.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage addAllCapabilities(List<Capability> capabilities) {
            this.capabilities.addAll(capabilities);
            return this;
        }

        /**
         * <p>List of capabilities supported by the caller. Defaults to everything except charts_highcharts_ts. Note that the forms and images capabilities are not respected at this time.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage addCapabilities(Capability capabilities) {
            this.capabilities.add(capabilities);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "capabilities", nulls = Nulls.SKIP)
        public _FinalStage capabilities(List<Capability> capabilities) {
            this.capabilities.clear();
            this.capabilities.addAll(capabilities);
            return this;
        }

        @java.lang.Override
        public ResponseConfig build() {
            return new ResponseConfig(capabilities, isCopilot, responseLength, additionalProperties);
        }
    }
}
