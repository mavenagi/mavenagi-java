/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.mavenagi.resources.actions;

import com.mavenagi.core.ClientOptions;
import com.mavenagi.core.RequestOptions;
import com.mavenagi.resources.actions.types.ActionRequest;
import com.mavenagi.resources.commons.types.ActionResponse;
import java.util.concurrent.CompletableFuture;

public class AsyncActionsClient {
    protected final ClientOptions clientOptions;

    private final AsyncRawActionsClient rawClient;

    public AsyncActionsClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new AsyncRawActionsClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public AsyncRawActionsClient withRawResponse() {
        return this.rawClient;
    }

    /**
     * Update an action or create it if it doesn't exist
     */
    public CompletableFuture<ActionResponse> createOrUpdate(ActionRequest request) {
        return this.rawClient.createOrUpdate(request).thenApply(response -> response.body());
    }

    /**
     * Update an action or create it if it doesn't exist
     */
    public CompletableFuture<ActionResponse> createOrUpdate(ActionRequest request, RequestOptions requestOptions) {
        return this.rawClient.createOrUpdate(request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Get an action by its supplied ID
     */
    public CompletableFuture<ActionResponse> get(String actionReferenceId) {
        return this.rawClient.get(actionReferenceId).thenApply(response -> response.body());
    }

    /**
     * Get an action by its supplied ID
     */
    public CompletableFuture<ActionResponse> get(String actionReferenceId, RequestOptions requestOptions) {
        return this.rawClient.get(actionReferenceId, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Delete an action
     */
    public CompletableFuture<Void> delete(String actionReferenceId) {
        return this.rawClient.delete(actionReferenceId).thenApply(response -> response.body());
    }

    /**
     * Delete an action
     */
    public CompletableFuture<Void> delete(String actionReferenceId, RequestOptions requestOptions) {
        return this.rawClient.delete(actionReferenceId, requestOptions).thenApply(response -> response.body());
    }
}
