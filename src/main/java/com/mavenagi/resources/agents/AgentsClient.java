/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.mavenagi.resources.agents;

import com.mavenagi.core.ClientOptions;
import com.mavenagi.core.RequestOptions;
import com.mavenagi.resources.agents.types.Agent;
import com.mavenagi.resources.agents.types.AgentPatchRequest;
import com.mavenagi.resources.agents.types.AgentsSearchRequest;
import com.mavenagi.resources.agents.types.AgentsSearchResponse;
import com.mavenagi.resources.agents.types.CreateAgentRequest;
import java.util.List;

public class AgentsClient {
    protected final ClientOptions clientOptions;

    private final RawAgentsClient rawClient;

    public AgentsClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new RawAgentsClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public RawAgentsClient withRawResponse() {
        return this.rawClient;
    }

    /**
     * Search for agents across all organizations.
     * <p>&lt;Tip&gt;
     * This endpoint requires additional permissions. Contact support to request access.
     * &lt;/Tip&gt;</p>
     */
    public AgentsSearchResponse search() {
        return this.rawClient.search().body();
    }

    /**
     * Search for agents across all organizations.
     * <p>&lt;Tip&gt;
     * This endpoint requires additional permissions. Contact support to request access.
     * &lt;/Tip&gt;</p>
     */
    public AgentsSearchResponse search(AgentsSearchRequest request) {
        return this.rawClient.search(request).body();
    }

    /**
     * Search for agents across all organizations.
     * <p>&lt;Tip&gt;
     * This endpoint requires additional permissions. Contact support to request access.
     * &lt;/Tip&gt;</p>
     */
    public AgentsSearchResponse search(AgentsSearchRequest request, RequestOptions requestOptions) {
        return this.rawClient.search(request, requestOptions).body();
    }

    /**
     * Lists all agents for an organization
     */
    public List<Agent> list(String organizationReferenceId) {
        return this.rawClient.list(organizationReferenceId).body();
    }

    /**
     * Lists all agents for an organization
     */
    public List<Agent> list(String organizationReferenceId, RequestOptions requestOptions) {
        return this.rawClient.list(organizationReferenceId, requestOptions).body();
    }

    /**
     * Create a new agent
     * <p>&lt;Tip&gt;
     * This endpoint requires additional permissions. Contact support to request access.
     * &lt;/Tip&gt;</p>
     */
    public Agent create(String organizationReferenceId, String agentReferenceId, CreateAgentRequest request) {
        return this.rawClient
                .create(organizationReferenceId, agentReferenceId, request)
                .body();
    }

    /**
     * Create a new agent
     * <p>&lt;Tip&gt;
     * This endpoint requires additional permissions. Contact support to request access.
     * &lt;/Tip&gt;</p>
     */
    public Agent create(
            String organizationReferenceId,
            String agentReferenceId,
            CreateAgentRequest request,
            RequestOptions requestOptions) {
        return this.rawClient
                .create(organizationReferenceId, agentReferenceId, request, requestOptions)
                .body();
    }

    /**
     * Get an agent
     */
    public Agent get(String organizationReferenceId, String agentReferenceId) {
        return this.rawClient.get(organizationReferenceId, agentReferenceId).body();
    }

    /**
     * Get an agent
     */
    public Agent get(String organizationReferenceId, String agentReferenceId, RequestOptions requestOptions) {
        return this.rawClient
                .get(organizationReferenceId, agentReferenceId, requestOptions)
                .body();
    }

    /**
     * Update mutable agent fields
     * All fields will overwrite the existing value on the agent only if provided.
     * <p>&lt;Tip&gt;
     * This endpoint requires additional permissions. Contact support to request access.
     * &lt;/Tip&gt;</p>
     */
    public Agent patch(String organizationReferenceId, String agentReferenceId) {
        return this.rawClient.patch(organizationReferenceId, agentReferenceId).body();
    }

    /**
     * Update mutable agent fields
     * All fields will overwrite the existing value on the agent only if provided.
     * <p>&lt;Tip&gt;
     * This endpoint requires additional permissions. Contact support to request access.
     * &lt;/Tip&gt;</p>
     */
    public Agent patch(String organizationReferenceId, String agentReferenceId, AgentPatchRequest request) {
        return this.rawClient
                .patch(organizationReferenceId, agentReferenceId, request)
                .body();
    }

    /**
     * Update mutable agent fields
     * All fields will overwrite the existing value on the agent only if provided.
     * <p>&lt;Tip&gt;
     * This endpoint requires additional permissions. Contact support to request access.
     * &lt;/Tip&gt;</p>
     */
    public Agent patch(
            String organizationReferenceId,
            String agentReferenceId,
            AgentPatchRequest request,
            RequestOptions requestOptions) {
        return this.rawClient
                .patch(organizationReferenceId, agentReferenceId, request, requestOptions)
                .body();
    }

    /**
     * Delete an agent.
     * <p>&lt;Tip&gt;
     * This endpoint requires additional permissions. Contact support to request access.
     * &lt;/Tip&gt;</p>
     */
    public void delete(String organizationReferenceId, String agentReferenceId) {
        this.rawClient.delete(organizationReferenceId, agentReferenceId).body();
    }

    /**
     * Delete an agent.
     * <p>&lt;Tip&gt;
     * This endpoint requires additional permissions. Contact support to request access.
     * &lt;/Tip&gt;</p>
     */
    public void delete(String organizationReferenceId, String agentReferenceId, RequestOptions requestOptions) {
        this.rawClient
                .delete(organizationReferenceId, agentReferenceId, requestOptions)
                .body();
    }
}
