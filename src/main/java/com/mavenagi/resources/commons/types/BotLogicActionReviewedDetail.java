/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.mavenagi.resources.commons.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.mavenagi.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = BotLogicActionReviewedDetail.Builder.class)
public final class BotLogicActionReviewedDetail implements IBotLogicActionReviewedDetail {
    private final EntityIdWithoutAgent actionId;

    private final String actionName;

    private final Map<String, Object> additionalProperties;

    private BotLogicActionReviewedDetail(
            EntityIdWithoutAgent actionId, String actionName, Map<String, Object> additionalProperties) {
        this.actionId = actionId;
        this.actionName = actionName;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("actionId")
    @java.lang.Override
    public EntityIdWithoutAgent getActionId() {
        return actionId;
    }

    @JsonProperty("actionName")
    @java.lang.Override
    public String getActionName() {
        return actionName;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof BotLogicActionReviewedDetail && equalTo((BotLogicActionReviewedDetail) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(BotLogicActionReviewedDetail other) {
        return actionId.equals(other.actionId) && actionName.equals(other.actionName);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.actionId, this.actionName);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static ActionIdStage builder() {
        return new Builder();
    }

    public interface ActionIdStage {
        ActionNameStage actionId(@NotNull EntityIdWithoutAgent actionId);

        Builder from(BotLogicActionReviewedDetail other);
    }

    public interface ActionNameStage {
        _FinalStage actionName(@NotNull String actionName);
    }

    public interface _FinalStage {
        BotLogicActionReviewedDetail build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements ActionIdStage, ActionNameStage, _FinalStage {
        private EntityIdWithoutAgent actionId;

        private String actionName;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(BotLogicActionReviewedDetail other) {
            actionId(other.getActionId());
            actionName(other.getActionName());
            return this;
        }

        @java.lang.Override
        @JsonSetter("actionId")
        public ActionNameStage actionId(@NotNull EntityIdWithoutAgent actionId) {
            this.actionId = Objects.requireNonNull(actionId, "actionId must not be null");
            return this;
        }

        @java.lang.Override
        @JsonSetter("actionName")
        public _FinalStage actionName(@NotNull String actionName) {
            this.actionName = Objects.requireNonNull(actionName, "actionName must not be null");
            return this;
        }

        @java.lang.Override
        public BotLogicActionReviewedDetail build() {
            return new BotLogicActionReviewedDetail(actionId, actionName, additionalProperties);
        }
    }
}
