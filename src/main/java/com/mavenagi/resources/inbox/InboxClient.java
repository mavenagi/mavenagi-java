/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.mavenagi.resources.inbox;

import com.mavenagi.core.ClientOptions;
import com.mavenagi.core.RequestOptions;
import com.mavenagi.resources.commons.types.InboxItem;
import com.mavenagi.resources.commons.types.InboxItemFix;
import com.mavenagi.resources.inbox.requests.InboxItemFixRequest;
import com.mavenagi.resources.inbox.requests.InboxItemIgnoreRequest;
import com.mavenagi.resources.inbox.requests.InboxItemRequest;
import com.mavenagi.resources.inbox.types.ApplyInboxItemFixRequest;
import com.mavenagi.resources.inbox.types.InboxSearchRequest;
import com.mavenagi.resources.inbox.types.InboxSearchResponse;

public class InboxClient {
    protected final ClientOptions clientOptions;

    private final RawInboxClient rawClient;

    public InboxClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new RawInboxClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public RawInboxClient withRawResponse() {
        return this.rawClient;
    }

    /**
     * Retrieve a paginated list of inbox items for an agent.
     */
    public InboxSearchResponse search() {
        return this.rawClient.search().body();
    }

    /**
     * Retrieve a paginated list of inbox items for an agent.
     */
    public InboxSearchResponse search(InboxSearchRequest request) {
        return this.rawClient.search(request).body();
    }

    /**
     * Retrieve a paginated list of inbox items for an agent.
     */
    public InboxSearchResponse search(InboxSearchRequest request, RequestOptions requestOptions) {
        return this.rawClient.search(request, requestOptions).body();
    }

    /**
     * Retrieve details of a specific inbox item by its ID.
     */
    public InboxItem get(String inboxItemId, InboxItemRequest request) {
        return this.rawClient.get(inboxItemId, request).body();
    }

    /**
     * Retrieve details of a specific inbox item by its ID.
     */
    public InboxItem get(String inboxItemId, InboxItemRequest request, RequestOptions requestOptions) {
        return this.rawClient.get(inboxItemId, request, requestOptions).body();
    }

    /**
     * Retrieve a suggested fix. Includes document information if the fix is a Missing Knowledge suggestion.
     */
    public InboxItemFix getFix(String inboxItemFixId, InboxItemFixRequest request) {
        return this.rawClient.getFix(inboxItemFixId, request).body();
    }

    /**
     * Retrieve a suggested fix. Includes document information if the fix is a Missing Knowledge suggestion.
     */
    public InboxItemFix getFix(String inboxItemFixId, InboxItemFixRequest request, RequestOptions requestOptions) {
        return this.rawClient.getFix(inboxItemFixId, request, requestOptions).body();
    }

    /**
     * Apply a fix to an inbox item with a specific document.
     */
    public void applyFix(String inboxItemFixId, ApplyInboxItemFixRequest request) {
        this.rawClient.applyFix(inboxItemFixId, request).body();
    }

    /**
     * Apply a fix to an inbox item with a specific document.
     */
    public void applyFix(String inboxItemFixId, ApplyInboxItemFixRequest request, RequestOptions requestOptions) {
        this.rawClient.applyFix(inboxItemFixId, request, requestOptions).body();
    }

    /**
     * Ignore a specific inbox item by its ID.
     */
    public void ignore(String inboxItemId, InboxItemIgnoreRequest request) {
        this.rawClient.ignore(inboxItemId, request).body();
    }

    /**
     * Ignore a specific inbox item by its ID.
     */
    public void ignore(String inboxItemId, InboxItemIgnoreRequest request, RequestOptions requestOptions) {
        this.rawClient.ignore(inboxItemId, request, requestOptions).body();
    }
}
