/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.mavenagi.resources.commons.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.mavenagi.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = BotLogicKnowledgeDetail.Builder.class)
public final class BotLogicKnowledgeDetail {
    private final EntityIdWithoutAgent knowledgeBaseId;

    private final EntityIdWithoutAgent documentId;

    private final String documentName;

    private final String documentExcerpt;

    private final Map<String, Object> additionalProperties;

    private BotLogicKnowledgeDetail(
            EntityIdWithoutAgent knowledgeBaseId,
            EntityIdWithoutAgent documentId,
            String documentName,
            String documentExcerpt,
            Map<String, Object> additionalProperties) {
        this.knowledgeBaseId = knowledgeBaseId;
        this.documentId = documentId;
        this.documentName = documentName;
        this.documentExcerpt = documentExcerpt;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("knowledgeBaseId")
    public EntityIdWithoutAgent getKnowledgeBaseId() {
        return knowledgeBaseId;
    }

    @JsonProperty("documentId")
    public EntityIdWithoutAgent getDocumentId() {
        return documentId;
    }

    @JsonProperty("documentName")
    public String getDocumentName() {
        return documentName;
    }

    @JsonProperty("documentExcerpt")
    public String getDocumentExcerpt() {
        return documentExcerpt;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof BotLogicKnowledgeDetail && equalTo((BotLogicKnowledgeDetail) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(BotLogicKnowledgeDetail other) {
        return knowledgeBaseId.equals(other.knowledgeBaseId)
                && documentId.equals(other.documentId)
                && documentName.equals(other.documentName)
                && documentExcerpt.equals(other.documentExcerpt);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.knowledgeBaseId, this.documentId, this.documentName, this.documentExcerpt);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static KnowledgeBaseIdStage builder() {
        return new Builder();
    }

    public interface KnowledgeBaseIdStage {
        DocumentIdStage knowledgeBaseId(@NotNull EntityIdWithoutAgent knowledgeBaseId);

        Builder from(BotLogicKnowledgeDetail other);
    }

    public interface DocumentIdStage {
        DocumentNameStage documentId(@NotNull EntityIdWithoutAgent documentId);
    }

    public interface DocumentNameStage {
        DocumentExcerptStage documentName(@NotNull String documentName);
    }

    public interface DocumentExcerptStage {
        _FinalStage documentExcerpt(@NotNull String documentExcerpt);
    }

    public interface _FinalStage {
        BotLogicKnowledgeDetail build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder
            implements KnowledgeBaseIdStage, DocumentIdStage, DocumentNameStage, DocumentExcerptStage, _FinalStage {
        private EntityIdWithoutAgent knowledgeBaseId;

        private EntityIdWithoutAgent documentId;

        private String documentName;

        private String documentExcerpt;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(BotLogicKnowledgeDetail other) {
            knowledgeBaseId(other.getKnowledgeBaseId());
            documentId(other.getDocumentId());
            documentName(other.getDocumentName());
            documentExcerpt(other.getDocumentExcerpt());
            return this;
        }

        @java.lang.Override
        @JsonSetter("knowledgeBaseId")
        public DocumentIdStage knowledgeBaseId(@NotNull EntityIdWithoutAgent knowledgeBaseId) {
            this.knowledgeBaseId = Objects.requireNonNull(knowledgeBaseId, "knowledgeBaseId must not be null");
            return this;
        }

        @java.lang.Override
        @JsonSetter("documentId")
        public DocumentNameStage documentId(@NotNull EntityIdWithoutAgent documentId) {
            this.documentId = Objects.requireNonNull(documentId, "documentId must not be null");
            return this;
        }

        @java.lang.Override
        @JsonSetter("documentName")
        public DocumentExcerptStage documentName(@NotNull String documentName) {
            this.documentName = Objects.requireNonNull(documentName, "documentName must not be null");
            return this;
        }

        @java.lang.Override
        @JsonSetter("documentExcerpt")
        public _FinalStage documentExcerpt(@NotNull String documentExcerpt) {
            this.documentExcerpt = Objects.requireNonNull(documentExcerpt, "documentExcerpt must not be null");
            return this;
        }

        @java.lang.Override
        public BotLogicKnowledgeDetail build() {
            return new BotLogicKnowledgeDetail(
                    knowledgeBaseId, documentId, documentName, documentExcerpt, additionalProperties);
        }
    }
}
