/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.mavenagi.api.resources.inbox.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.mavenagi.api.core.ObjectMappers;
import com.mavenagi.api.resources.knowledge.types.KnowledgeDocumentRequest;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = AddDocumentFixRequest.Builder.class)
public final class AddDocumentFixRequest {
    private final KnowledgeDocumentRequest knowledgeDocumentRequest;

    private final String knowledgeBaseReferenceId;

    private final Map<String, Object> additionalProperties;

    private AddDocumentFixRequest(
            KnowledgeDocumentRequest knowledgeDocumentRequest,
            String knowledgeBaseReferenceId,
            Map<String, Object> additionalProperties) {
        this.knowledgeDocumentRequest = knowledgeDocumentRequest;
        this.knowledgeBaseReferenceId = knowledgeBaseReferenceId;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return Knowledge document to be added by this request
     */
    @JsonProperty("knowledgeDocumentRequest")
    public KnowledgeDocumentRequest getKnowledgeDocumentRequest() {
        return knowledgeDocumentRequest;
    }

    /**
     * @return Reference id of the Knowledge Base the document will be added to
     */
    @JsonProperty("knowledgeBaseReferenceId")
    public String getKnowledgeBaseReferenceId() {
        return knowledgeBaseReferenceId;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof AddDocumentFixRequest && equalTo((AddDocumentFixRequest) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(AddDocumentFixRequest other) {
        return knowledgeDocumentRequest.equals(other.knowledgeDocumentRequest)
                && knowledgeBaseReferenceId.equals(other.knowledgeBaseReferenceId);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.knowledgeDocumentRequest, this.knowledgeBaseReferenceId);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static KnowledgeDocumentRequestStage builder() {
        return new Builder();
    }

    public interface KnowledgeDocumentRequestStage {
        KnowledgeBaseReferenceIdStage knowledgeDocumentRequest(
                @NotNull KnowledgeDocumentRequest knowledgeDocumentRequest);

        Builder from(AddDocumentFixRequest other);
    }

    public interface KnowledgeBaseReferenceIdStage {
        _FinalStage knowledgeBaseReferenceId(@NotNull String knowledgeBaseReferenceId);
    }

    public interface _FinalStage {
        AddDocumentFixRequest build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder
            implements KnowledgeDocumentRequestStage, KnowledgeBaseReferenceIdStage, _FinalStage {
        private KnowledgeDocumentRequest knowledgeDocumentRequest;

        private String knowledgeBaseReferenceId;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(AddDocumentFixRequest other) {
            knowledgeDocumentRequest(other.getKnowledgeDocumentRequest());
            knowledgeBaseReferenceId(other.getKnowledgeBaseReferenceId());
            return this;
        }

        /**
         * <p>Knowledge document to be added by this request</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("knowledgeDocumentRequest")
        public KnowledgeBaseReferenceIdStage knowledgeDocumentRequest(
                @NotNull KnowledgeDocumentRequest knowledgeDocumentRequest) {
            this.knowledgeDocumentRequest =
                    Objects.requireNonNull(knowledgeDocumentRequest, "knowledgeDocumentRequest must not be null");
            return this;
        }

        /**
         * <p>Reference id of the Knowledge Base the document will be added to</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("knowledgeBaseReferenceId")
        public _FinalStage knowledgeBaseReferenceId(@NotNull String knowledgeBaseReferenceId) {
            this.knowledgeBaseReferenceId =
                    Objects.requireNonNull(knowledgeBaseReferenceId, "knowledgeBaseReferenceId must not be null");
            return this;
        }

        @java.lang.Override
        public AddDocumentFixRequest build() {
            return new AddDocumentFixRequest(knowledgeDocumentRequest, knowledgeBaseReferenceId, additionalProperties);
        }
    }
}
