/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.mavenagi.resources.commons.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.mavenagi.core.ObjectMappers;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = BotLogicUserItem.Builder.class)
public final class BotLogicUserItem {
    private final Map<String, String> userData;

    private final Map<String, Object> additionalProperties;

    private BotLogicUserItem(Map<String, String> userData, Map<String, Object> additionalProperties) {
        this.userData = userData;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("userData")
    public Map<String, String> getUserData() {
        return userData;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof BotLogicUserItem && equalTo((BotLogicUserItem) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(BotLogicUserItem other) {
        return userData.equals(other.userData);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.userData);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        private Map<String, String> userData = new LinkedHashMap<>();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        public Builder from(BotLogicUserItem other) {
            userData(other.getUserData());
            return this;
        }

        @JsonSetter(value = "userData", nulls = Nulls.SKIP)
        public Builder userData(Map<String, String> userData) {
            this.userData.clear();
            this.userData.putAll(userData);
            return this;
        }

        public Builder putAllUserData(Map<String, String> userData) {
            this.userData.putAll(userData);
            return this;
        }

        public Builder userData(String key, String value) {
            this.userData.put(key, value);
            return this;
        }

        public BotLogicUserItem build() {
            return new BotLogicUserItem(userData, additionalProperties);
        }
    }
}
