/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.mavenagi.resources.knowledge.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.mavenagi.core.ObjectMappers;
import com.mavenagi.resources.commons.types.EntityIdWithoutAgent;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = FinalizeKnowledgeBaseVersionRequest.Builder.class)
public final class FinalizeKnowledgeBaseVersionRequest {
    private final Optional<EntityIdWithoutAgent> versionId;

    private final Optional<KnowledgeBaseVersionFinalizeStatus> status;

    private final Optional<String> errorMessage;

    private final Map<String, Object> additionalProperties;

    private FinalizeKnowledgeBaseVersionRequest(
            Optional<EntityIdWithoutAgent> versionId,
            Optional<KnowledgeBaseVersionFinalizeStatus> status,
            Optional<String> errorMessage,
            Map<String, Object> additionalProperties) {
        this.versionId = versionId;
        this.status = status;
        this.errorMessage = errorMessage;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return ID that uniquely identifies which knowledge base version to finalize. If not provided will use the most recent version of the knowledge base.
     */
    @JsonProperty("versionId")
    public Optional<EntityIdWithoutAgent> getVersionId() {
        return versionId;
    }

    /**
     * @return Whether the knowledge base version processing was successful or not.
     */
    @JsonProperty("status")
    public Optional<KnowledgeBaseVersionFinalizeStatus> getStatus() {
        return status;
    }

    /**
     * @return A user-facing error message that provides more details about a version failure.
     */
    @JsonProperty("errorMessage")
    public Optional<String> getErrorMessage() {
        return errorMessage;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof FinalizeKnowledgeBaseVersionRequest
                && equalTo((FinalizeKnowledgeBaseVersionRequest) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(FinalizeKnowledgeBaseVersionRequest other) {
        return versionId.equals(other.versionId)
                && status.equals(other.status)
                && errorMessage.equals(other.errorMessage);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.versionId, this.status, this.errorMessage);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        private Optional<EntityIdWithoutAgent> versionId = Optional.empty();

        private Optional<KnowledgeBaseVersionFinalizeStatus> status = Optional.empty();

        private Optional<String> errorMessage = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        public Builder from(FinalizeKnowledgeBaseVersionRequest other) {
            versionId(other.getVersionId());
            status(other.getStatus());
            errorMessage(other.getErrorMessage());
            return this;
        }

        /**
         * <p>ID that uniquely identifies which knowledge base version to finalize. If not provided will use the most recent version of the knowledge base.</p>
         */
        @JsonSetter(value = "versionId", nulls = Nulls.SKIP)
        public Builder versionId(Optional<EntityIdWithoutAgent> versionId) {
            this.versionId = versionId;
            return this;
        }

        public Builder versionId(EntityIdWithoutAgent versionId) {
            this.versionId = Optional.ofNullable(versionId);
            return this;
        }

        /**
         * <p>Whether the knowledge base version processing was successful or not.</p>
         */
        @JsonSetter(value = "status", nulls = Nulls.SKIP)
        public Builder status(Optional<KnowledgeBaseVersionFinalizeStatus> status) {
            this.status = status;
            return this;
        }

        public Builder status(KnowledgeBaseVersionFinalizeStatus status) {
            this.status = Optional.ofNullable(status);
            return this;
        }

        /**
         * <p>A user-facing error message that provides more details about a version failure.</p>
         */
        @JsonSetter(value = "errorMessage", nulls = Nulls.SKIP)
        public Builder errorMessage(Optional<String> errorMessage) {
            this.errorMessage = errorMessage;
            return this;
        }

        public Builder errorMessage(String errorMessage) {
            this.errorMessage = Optional.ofNullable(errorMessage);
            return this;
        }

        public FinalizeKnowledgeBaseVersionRequest build() {
            return new FinalizeKnowledgeBaseVersionRequest(versionId, status, errorMessage, additionalProperties);
        }
    }
}
