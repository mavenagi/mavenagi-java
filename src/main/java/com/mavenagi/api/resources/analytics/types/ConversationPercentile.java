/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.mavenagi.api.resources.analytics.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.mavenagi.api.core.ObjectMappers;
import com.mavenagi.api.resources.conversation.types.NumericConversationField;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = ConversationPercentile.Builder.class)
public final class ConversationPercentile implements IConversationNumericMetric {
    private final NumericConversationField targetField;

    private final double percentile;

    private final Map<String, Object> additionalProperties;

    private ConversationPercentile(
            NumericConversationField targetField, double percentile, Map<String, Object> additionalProperties) {
        this.targetField = targetField;
        this.percentile = percentile;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return Numeric field to apply the metric to.
     */
    @JsonProperty("targetField")
    @java.lang.Override
    public NumericConversationField getTargetField() {
        return targetField;
    }

    /**
     * @return The percentile to calculate. Example: 25 computes the 25th percentile.
     */
    @JsonProperty("percentile")
    public double getPercentile() {
        return percentile;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof ConversationPercentile && equalTo((ConversationPercentile) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(ConversationPercentile other) {
        return targetField.equals(other.targetField) && percentile == other.percentile;
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.targetField, this.percentile);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static TargetFieldStage builder() {
        return new Builder();
    }

    public interface TargetFieldStage {
        PercentileStage targetField(@NotNull NumericConversationField targetField);

        Builder from(ConversationPercentile other);
    }

    public interface PercentileStage {
        _FinalStage percentile(double percentile);
    }

    public interface _FinalStage {
        ConversationPercentile build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements TargetFieldStage, PercentileStage, _FinalStage {
        private NumericConversationField targetField;

        private double percentile;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(ConversationPercentile other) {
            targetField(other.getTargetField());
            percentile(other.getPercentile());
            return this;
        }

        /**
         * <p>Numeric field to apply the metric to.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("targetField")
        public PercentileStage targetField(@NotNull NumericConversationField targetField) {
            this.targetField = Objects.requireNonNull(targetField, "targetField must not be null");
            return this;
        }

        /**
         * <p>The percentile to calculate. Example: 25 computes the 25th percentile.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("percentile")
        public _FinalStage percentile(double percentile) {
            this.percentile = percentile;
            return this;
        }

        @java.lang.Override
        public ConversationPercentile build() {
            return new ConversationPercentile(targetField, percentile, additionalProperties);
        }
    }
}
