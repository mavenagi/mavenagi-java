/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.mavenagi.resources.users.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.mavenagi.core.ObjectMappers;
import com.mavenagi.resources.commons.types.AppUserIdentifier;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import java.util.Set;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = AgentUser.Builder.class)
public final class AgentUser {
    private final String id;

    private final OffsetDateTime createdAt;

    private final OffsetDateTime updatedAt;

    private final Set<AppUserIdentifier> identifiers;

    private final Optional<String> defaultName;

    private final List<AppUserSummary> users;

    private final Map<String, Object> additionalProperties;

    private AgentUser(
            String id,
            OffsetDateTime createdAt,
            OffsetDateTime updatedAt,
            Set<AppUserIdentifier> identifiers,
            Optional<String> defaultName,
            List<AppUserSummary> users,
            Map<String, Object> additionalProperties) {
        this.id = id;
        this.createdAt = createdAt;
        this.updatedAt = updatedAt;
        this.identifiers = identifiers;
        this.defaultName = defaultName;
        this.users = users;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return The ID of the agent user.
     */
    @JsonProperty("id")
    public String getId() {
        return id;
    }

    /**
     * @return The date and time the agent user was created
     */
    @JsonProperty("createdAt")
    public OffsetDateTime getCreatedAt() {
        return createdAt;
    }

    /**
     * @return The date and time the agent user was last updated
     */
    @JsonProperty("updatedAt")
    public OffsetDateTime getUpdatedAt() {
        return updatedAt;
    }

    /**
     * @return All identifiers for the agent user. This is a merged set of identifiers from the app created users.
     */
    @JsonProperty("identifiers")
    public Set<AppUserIdentifier> getIdentifiers() {
        return identifiers;
    }

    /**
     * @return A name for the agent user, if one can be determined.
     * The value is derived from the user data provided by individual apps - specifically data fields keyed by <code>name</code>, <code>first_name</code> or <code>firstName</code>.
     */
    @JsonProperty("defaultName")
    public Optional<String> getDefaultName() {
        return defaultName;
    }

    /**
     * @return App created users that are associated with this agent user.
     * If two apps create users with the same identifying properties, they will be merged into a single agent user.
     */
    @JsonProperty("users")
    public List<AppUserSummary> getUsers() {
        return users;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof AgentUser && equalTo((AgentUser) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(AgentUser other) {
        return id.equals(other.id)
                && createdAt.equals(other.createdAt)
                && updatedAt.equals(other.updatedAt)
                && identifiers.equals(other.identifiers)
                && defaultName.equals(other.defaultName)
                && users.equals(other.users);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.id, this.createdAt, this.updatedAt, this.identifiers, this.defaultName, this.users);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static IdStage builder() {
        return new Builder();
    }

    public interface IdStage {
        /**
         * <p>The ID of the agent user.</p>
         */
        CreatedAtStage id(@NotNull String id);

        Builder from(AgentUser other);
    }

    public interface CreatedAtStage {
        /**
         * <p>The date and time the agent user was created</p>
         */
        UpdatedAtStage createdAt(@NotNull OffsetDateTime createdAt);
    }

    public interface UpdatedAtStage {
        /**
         * <p>The date and time the agent user was last updated</p>
         */
        _FinalStage updatedAt(@NotNull OffsetDateTime updatedAt);
    }

    public interface _FinalStage {
        AgentUser build();

        /**
         * <p>All identifiers for the agent user. This is a merged set of identifiers from the app created users.</p>
         */
        _FinalStage identifiers(Set<AppUserIdentifier> identifiers);

        _FinalStage addIdentifiers(AppUserIdentifier identifiers);

        _FinalStage addAllIdentifiers(Set<AppUserIdentifier> identifiers);

        /**
         * <p>A name for the agent user, if one can be determined.
         * The value is derived from the user data provided by individual apps - specifically data fields keyed by <code>name</code>, <code>first_name</code> or <code>firstName</code>.</p>
         */
        _FinalStage defaultName(Optional<String> defaultName);

        _FinalStage defaultName(String defaultName);

        /**
         * <p>App created users that are associated with this agent user.
         * If two apps create users with the same identifying properties, they will be merged into a single agent user.</p>
         */
        _FinalStage users(List<AppUserSummary> users);

        _FinalStage addUsers(AppUserSummary users);

        _FinalStage addAllUsers(List<AppUserSummary> users);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements IdStage, CreatedAtStage, UpdatedAtStage, _FinalStage {
        private String id;

        private OffsetDateTime createdAt;

        private OffsetDateTime updatedAt;

        private List<AppUserSummary> users = new ArrayList<>();

        private Optional<String> defaultName = Optional.empty();

        private Set<AppUserIdentifier> identifiers = new LinkedHashSet<>();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(AgentUser other) {
            id(other.getId());
            createdAt(other.getCreatedAt());
            updatedAt(other.getUpdatedAt());
            identifiers(other.getIdentifiers());
            defaultName(other.getDefaultName());
            users(other.getUsers());
            return this;
        }

        /**
         * <p>The ID of the agent user.</p>
         * <p>The ID of the agent user.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("id")
        public CreatedAtStage id(@NotNull String id) {
            this.id = Objects.requireNonNull(id, "id must not be null");
            return this;
        }

        /**
         * <p>The date and time the agent user was created</p>
         * <p>The date and time the agent user was created</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("createdAt")
        public UpdatedAtStage createdAt(@NotNull OffsetDateTime createdAt) {
            this.createdAt = Objects.requireNonNull(createdAt, "createdAt must not be null");
            return this;
        }

        /**
         * <p>The date and time the agent user was last updated</p>
         * <p>The date and time the agent user was last updated</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("updatedAt")
        public _FinalStage updatedAt(@NotNull OffsetDateTime updatedAt) {
            this.updatedAt = Objects.requireNonNull(updatedAt, "updatedAt must not be null");
            return this;
        }

        /**
         * <p>App created users that are associated with this agent user.
         * If two apps create users with the same identifying properties, they will be merged into a single agent user.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage addAllUsers(List<AppUserSummary> users) {
            this.users.addAll(users);
            return this;
        }

        /**
         * <p>App created users that are associated with this agent user.
         * If two apps create users with the same identifying properties, they will be merged into a single agent user.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage addUsers(AppUserSummary users) {
            this.users.add(users);
            return this;
        }

        /**
         * <p>App created users that are associated with this agent user.
         * If two apps create users with the same identifying properties, they will be merged into a single agent user.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "users", nulls = Nulls.SKIP)
        public _FinalStage users(List<AppUserSummary> users) {
            this.users.clear();
            this.users.addAll(users);
            return this;
        }

        /**
         * <p>A name for the agent user, if one can be determined.
         * The value is derived from the user data provided by individual apps - specifically data fields keyed by <code>name</code>, <code>first_name</code> or <code>firstName</code>.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage defaultName(String defaultName) {
            this.defaultName = Optional.ofNullable(defaultName);
            return this;
        }

        /**
         * <p>A name for the agent user, if one can be determined.
         * The value is derived from the user data provided by individual apps - specifically data fields keyed by <code>name</code>, <code>first_name</code> or <code>firstName</code>.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "defaultName", nulls = Nulls.SKIP)
        public _FinalStage defaultName(Optional<String> defaultName) {
            this.defaultName = defaultName;
            return this;
        }

        /**
         * <p>All identifiers for the agent user. This is a merged set of identifiers from the app created users.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage addAllIdentifiers(Set<AppUserIdentifier> identifiers) {
            this.identifiers.addAll(identifiers);
            return this;
        }

        /**
         * <p>All identifiers for the agent user. This is a merged set of identifiers from the app created users.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage addIdentifiers(AppUserIdentifier identifiers) {
            this.identifiers.add(identifiers);
            return this;
        }

        /**
         * <p>All identifiers for the agent user. This is a merged set of identifiers from the app created users.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "identifiers", nulls = Nulls.SKIP)
        public _FinalStage identifiers(Set<AppUserIdentifier> identifiers) {
            this.identifiers.clear();
            this.identifiers.addAll(identifiers);
            return this;
        }

        @java.lang.Override
        public AgentUser build() {
            return new AgentUser(id, createdAt, updatedAt, identifiers, defaultName, users, additionalProperties);
        }
    }
}
