/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.mavenagi.api.resources.commons.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.mavenagi.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = ActionEnumOption.Builder.class)
public final class ActionEnumOption {
    private final String label;

    private final Object value;

    private final Map<String, Object> additionalProperties;

    private ActionEnumOption(String label, Object value, Map<String, Object> additionalProperties) {
        this.label = label;
        this.value = value;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return Will be shown during form display as the user facing string in a dropdown or radio.
     */
    @JsonProperty("label")
    public String getLabel() {
        return label;
    }

    /**
     * @return A valid value for the field.
     */
    @JsonProperty("value")
    public Object getValue() {
        return value;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof ActionEnumOption && equalTo((ActionEnumOption) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(ActionEnumOption other) {
        return label.equals(other.label) && value.equals(other.value);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.label, this.value);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static LabelStage builder() {
        return new Builder();
    }

    public interface LabelStage {
        ValueStage label(@NotNull String label);

        Builder from(ActionEnumOption other);
    }

    public interface ValueStage {
        _FinalStage value(Object value);
    }

    public interface _FinalStage {
        ActionEnumOption build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements LabelStage, ValueStage, _FinalStage {
        private String label;

        private Object value;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(ActionEnumOption other) {
            label(other.getLabel());
            value(other.getValue());
            return this;
        }

        /**
         * <p>Will be shown during form display as the user facing string in a dropdown or radio.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("label")
        public ValueStage label(@NotNull String label) {
            this.label = Objects.requireNonNull(label, "label must not be null");
            return this;
        }

        /**
         * <p>A valid value for the field.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("value")
        public _FinalStage value(Object value) {
            this.value = value;
            return this;
        }

        @java.lang.Override
        public ActionEnumOption build() {
            return new ActionEnumOption(label, value, additionalProperties);
        }
    }
}
