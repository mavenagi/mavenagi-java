/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.mavenagi.resources.commons.types;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonUnwrapped;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Objects;
import java.util.Optional;

public final class InboxItemFix {
    private final Value value;

    @JsonCreator(mode = JsonCreator.Mode.DELEGATING)
    private InboxItemFix(Value value) {
        this.value = value;
    }

    public <T> T visit(Visitor<T> visitor) {
        return value.visit(visitor);
    }

    public static InboxItemFix addDocument(InboxItemFixAddDocument value) {
        return new InboxItemFix(new AddDocumentValue(value));
    }

    public static InboxItemFix deactivateDocument(InboxItemFixDeactivateDocument value) {
        return new InboxItemFix(new DeactivateDocumentValue(value));
    }

    public boolean isAddDocument() {
        return value instanceof AddDocumentValue;
    }

    public boolean isDeactivateDocument() {
        return value instanceof DeactivateDocumentValue;
    }

    public boolean _isUnknown() {
        return value instanceof _UnknownValue;
    }

    public Optional<InboxItemFixAddDocument> getAddDocument() {
        if (isAddDocument()) {
            return Optional.of(((AddDocumentValue) value).value);
        }
        return Optional.empty();
    }

    public Optional<InboxItemFixDeactivateDocument> getDeactivateDocument() {
        if (isDeactivateDocument()) {
            return Optional.of(((DeactivateDocumentValue) value).value);
        }
        return Optional.empty();
    }

    public Optional<Object> _getUnknown() {
        if (_isUnknown()) {
            return Optional.of(((_UnknownValue) value).value);
        }
        return Optional.empty();
    }

    @JsonValue
    private Value getValue() {
        return this.value;
    }

    public interface Visitor<T> {
        T visitAddDocument(InboxItemFixAddDocument addDocument);

        T visitDeactivateDocument(InboxItemFixDeactivateDocument deactivateDocument);

        T _visitUnknown(Object unknownType);
    }

    @JsonTypeInfo(use = JsonTypeInfo.Id.NAME, property = "type", visible = true, defaultImpl = _UnknownValue.class)
    @JsonSubTypes({@JsonSubTypes.Type(AddDocumentValue.class), @JsonSubTypes.Type(DeactivateDocumentValue.class)})
    @JsonIgnoreProperties(ignoreUnknown = true)
    private interface Value {
        <T> T visit(Visitor<T> visitor);
    }

    @JsonTypeName("addDocument")
    @JsonIgnoreProperties("type")
    private static final class AddDocumentValue implements Value {
        @JsonUnwrapped
        private InboxItemFixAddDocument value;

        @JsonCreator(mode = JsonCreator.Mode.PROPERTIES)
        private AddDocumentValue() {}

        private AddDocumentValue(InboxItemFixAddDocument value) {
            this.value = value;
        }

        @java.lang.Override
        public <T> T visit(Visitor<T> visitor) {
            return visitor.visitAddDocument(value);
        }

        @java.lang.Override
        public boolean equals(Object other) {
            if (this == other) return true;
            return other instanceof AddDocumentValue && equalTo((AddDocumentValue) other);
        }

        private boolean equalTo(AddDocumentValue other) {
            return value.equals(other.value);
        }

        @java.lang.Override
        public int hashCode() {
            return Objects.hash(this.value);
        }

        @java.lang.Override
        public String toString() {
            return "InboxItemFix{" + "value: " + value + "}";
        }
    }

    @JsonTypeName("deactivateDocument")
    @JsonIgnoreProperties("type")
    private static final class DeactivateDocumentValue implements Value {
        @JsonUnwrapped
        private InboxItemFixDeactivateDocument value;

        @JsonCreator(mode = JsonCreator.Mode.PROPERTIES)
        private DeactivateDocumentValue() {}

        private DeactivateDocumentValue(InboxItemFixDeactivateDocument value) {
            this.value = value;
        }

        @java.lang.Override
        public <T> T visit(Visitor<T> visitor) {
            return visitor.visitDeactivateDocument(value);
        }

        @java.lang.Override
        public boolean equals(Object other) {
            if (this == other) return true;
            return other instanceof DeactivateDocumentValue && equalTo((DeactivateDocumentValue) other);
        }

        private boolean equalTo(DeactivateDocumentValue other) {
            return value.equals(other.value);
        }

        @java.lang.Override
        public int hashCode() {
            return Objects.hash(this.value);
        }

        @java.lang.Override
        public String toString() {
            return "InboxItemFix{" + "value: " + value + "}";
        }
    }

    @JsonIgnoreProperties("type")
    private static final class _UnknownValue implements Value {
        private String type;

        @JsonValue
        private Object value;

        @JsonCreator(mode = JsonCreator.Mode.PROPERTIES)
        private _UnknownValue(@JsonProperty("value") Object value) {}

        @java.lang.Override
        public <T> T visit(Visitor<T> visitor) {
            return visitor._visitUnknown(value);
        }

        @java.lang.Override
        public boolean equals(Object other) {
            if (this == other) return true;
            return other instanceof _UnknownValue && equalTo((_UnknownValue) other);
        }

        private boolean equalTo(_UnknownValue other) {
            return type.equals(other.type) && value.equals(other.value);
        }

        @java.lang.Override
        public int hashCode() {
            return Objects.hash(this.type, this.value);
        }

        @java.lang.Override
        public String toString() {
            return "InboxItemFix{" + "type: " + type + ", value: " + value + "}";
        }
    }
}
