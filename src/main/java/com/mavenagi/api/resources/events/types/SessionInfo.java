/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.mavenagi.api.resources.events.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.mavenagi.api.core.ObjectMappers;
import java.time.OffsetDateTime;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = SessionInfo.Builder.class)
public final class SessionInfo {
    private final String id;

    private final Optional<OffsetDateTime> start;

    private final Optional<OffsetDateTime> end;

    private final Optional<Long> duration;

    private final Map<String, Object> additionalProperties;

    private SessionInfo(
            String id,
            Optional<OffsetDateTime> start,
            Optional<OffsetDateTime> end,
            Optional<Long> duration,
            Map<String, Object> additionalProperties) {
        this.id = id;
        this.start = start;
        this.end = end;
        this.duration = duration;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("id")
    public String getId() {
        return id;
    }

    @JsonProperty("start")
    public Optional<OffsetDateTime> getStart() {
        return start;
    }

    @JsonProperty("end")
    public Optional<OffsetDateTime> getEnd() {
        return end;
    }

    @JsonProperty("duration")
    public Optional<Long> getDuration() {
        return duration;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof SessionInfo && equalTo((SessionInfo) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(SessionInfo other) {
        return id.equals(other.id)
                && start.equals(other.start)
                && end.equals(other.end)
                && duration.equals(other.duration);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.id, this.start, this.end, this.duration);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static IdStage builder() {
        return new Builder();
    }

    public interface IdStage {
        _FinalStage id(@NotNull String id);

        Builder from(SessionInfo other);
    }

    public interface _FinalStage {
        SessionInfo build();

        _FinalStage start(Optional<OffsetDateTime> start);

        _FinalStage start(OffsetDateTime start);

        _FinalStage end(Optional<OffsetDateTime> end);

        _FinalStage end(OffsetDateTime end);

        _FinalStage duration(Optional<Long> duration);

        _FinalStage duration(Long duration);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements IdStage, _FinalStage {
        private String id;

        private Optional<Long> duration = Optional.empty();

        private Optional<OffsetDateTime> end = Optional.empty();

        private Optional<OffsetDateTime> start = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(SessionInfo other) {
            id(other.getId());
            start(other.getStart());
            end(other.getEnd());
            duration(other.getDuration());
            return this;
        }

        @java.lang.Override
        @JsonSetter("id")
        public _FinalStage id(@NotNull String id) {
            this.id = Objects.requireNonNull(id, "id must not be null");
            return this;
        }

        @java.lang.Override
        public _FinalStage duration(Long duration) {
            this.duration = Optional.ofNullable(duration);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "duration", nulls = Nulls.SKIP)
        public _FinalStage duration(Optional<Long> duration) {
            this.duration = duration;
            return this;
        }

        @java.lang.Override
        public _FinalStage end(OffsetDateTime end) {
            this.end = Optional.ofNullable(end);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "end", nulls = Nulls.SKIP)
        public _FinalStage end(Optional<OffsetDateTime> end) {
            this.end = end;
            return this;
        }

        @java.lang.Override
        public _FinalStage start(OffsetDateTime start) {
            this.start = Optional.ofNullable(start);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "start", nulls = Nulls.SKIP)
        public _FinalStage start(Optional<OffsetDateTime> start) {
            this.start = start;
            return this;
        }

        @java.lang.Override
        public SessionInfo build() {
            return new SessionInfo(id, start, end, duration, additionalProperties);
        }
    }
}
