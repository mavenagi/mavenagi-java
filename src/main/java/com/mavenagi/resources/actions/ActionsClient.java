/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.mavenagi.resources.actions;

import com.mavenagi.core.ClientOptions;
import com.mavenagi.core.RequestOptions;
import com.mavenagi.resources.actions.requests.ActionGetRequest;
import com.mavenagi.resources.actions.types.ActionPatchRequest;
import com.mavenagi.resources.actions.types.ActionRequest;
import com.mavenagi.resources.actions.types.ActionsResponse;
import com.mavenagi.resources.actions.types.ActionsSearchRequest;
import com.mavenagi.resources.commons.types.ActionResponse;

public class ActionsClient {
    protected final ClientOptions clientOptions;

    private final RawActionsClient rawClient;

    public ActionsClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new RawActionsClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public RawActionsClient withRawResponse() {
        return this.rawClient;
    }

    public ActionsResponse search() {
        return this.rawClient.search().body();
    }

    public ActionsResponse search(ActionsSearchRequest request) {
        return this.rawClient.search(request).body();
    }

    public ActionsResponse search(ActionsSearchRequest request, RequestOptions requestOptions) {
        return this.rawClient.search(request, requestOptions).body();
    }

    /**
     * Update an action or create it if it doesn't exist
     */
    public ActionResponse createOrUpdate(ActionRequest request) {
        return this.rawClient.createOrUpdate(request).body();
    }

    /**
     * Update an action or create it if it doesn't exist
     */
    public ActionResponse createOrUpdate(ActionRequest request, RequestOptions requestOptions) {
        return this.rawClient.createOrUpdate(request, requestOptions).body();
    }

    /**
     * Get an action by its supplied ID
     */
    public ActionResponse get(String actionReferenceId) {
        return this.rawClient.get(actionReferenceId).body();
    }

    /**
     * Get an action by its supplied ID
     */
    public ActionResponse get(String actionReferenceId, ActionGetRequest request) {
        return this.rawClient.get(actionReferenceId, request).body();
    }

    /**
     * Get an action by its supplied ID
     */
    public ActionResponse get(String actionReferenceId, ActionGetRequest request, RequestOptions requestOptions) {
        return this.rawClient.get(actionReferenceId, request, requestOptions).body();
    }

    /**
     * Update mutable action fields
     * <p>The <code>appId</code> field can be provided to update an action owned by a different app.
     * All other fields will overwrite the existing value on the action only if provided.</p>
     */
    public ActionResponse patch(String actionReferenceId) {
        return this.rawClient.patch(actionReferenceId).body();
    }

    /**
     * Update mutable action fields
     * <p>The <code>appId</code> field can be provided to update an action owned by a different app.
     * All other fields will overwrite the existing value on the action only if provided.</p>
     */
    public ActionResponse patch(String actionReferenceId, ActionPatchRequest request) {
        return this.rawClient.patch(actionReferenceId, request).body();
    }

    /**
     * Update mutable action fields
     * <p>The <code>appId</code> field can be provided to update an action owned by a different app.
     * All other fields will overwrite the existing value on the action only if provided.</p>
     */
    public ActionResponse patch(String actionReferenceId, ActionPatchRequest request, RequestOptions requestOptions) {
        return this.rawClient.patch(actionReferenceId, request, requestOptions).body();
    }

    /**
     * Delete an action
     */
    public void delete(String actionReferenceId) {
        this.rawClient.delete(actionReferenceId).body();
    }

    /**
     * Delete an action
     */
    public void delete(String actionReferenceId, RequestOptions requestOptions) {
        this.rawClient.delete(actionReferenceId, requestOptions).body();
    }
}
