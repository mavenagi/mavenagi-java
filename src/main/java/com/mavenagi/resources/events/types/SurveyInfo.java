/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.mavenagi.resources.events.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.mavenagi.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = SurveyInfo.Builder.class)
public final class SurveyInfo {
    private final String surveyQuestion;

    private final Optional<String> surveyAnswer;

    private final Map<String, Object> additionalProperties;

    private SurveyInfo(String surveyQuestion, Optional<String> surveyAnswer, Map<String, Object> additionalProperties) {
        this.surveyQuestion = surveyQuestion;
        this.surveyAnswer = surveyAnswer;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("surveyQuestion")
    public String getSurveyQuestion() {
        return surveyQuestion;
    }

    @JsonProperty("surveyAnswer")
    public Optional<String> getSurveyAnswer() {
        return surveyAnswer;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof SurveyInfo && equalTo((SurveyInfo) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(SurveyInfo other) {
        return surveyQuestion.equals(other.surveyQuestion) && surveyAnswer.equals(other.surveyAnswer);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.surveyQuestion, this.surveyAnswer);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static SurveyQuestionStage builder() {
        return new Builder();
    }

    public interface SurveyQuestionStage {
        _FinalStage surveyQuestion(@NotNull String surveyQuestion);

        Builder from(SurveyInfo other);
    }

    public interface _FinalStage {
        SurveyInfo build();

        _FinalStage surveyAnswer(Optional<String> surveyAnswer);

        _FinalStage surveyAnswer(String surveyAnswer);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements SurveyQuestionStage, _FinalStage {
        private String surveyQuestion;

        private Optional<String> surveyAnswer = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(SurveyInfo other) {
            surveyQuestion(other.getSurveyQuestion());
            surveyAnswer(other.getSurveyAnswer());
            return this;
        }

        @java.lang.Override
        @JsonSetter("surveyQuestion")
        public _FinalStage surveyQuestion(@NotNull String surveyQuestion) {
            this.surveyQuestion = Objects.requireNonNull(surveyQuestion, "surveyQuestion must not be null");
            return this;
        }

        @java.lang.Override
        public _FinalStage surveyAnswer(String surveyAnswer) {
            this.surveyAnswer = Optional.ofNullable(surveyAnswer);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "surveyAnswer", nulls = Nulls.SKIP)
        public _FinalStage surveyAnswer(Optional<String> surveyAnswer) {
            this.surveyAnswer = surveyAnswer;
            return this;
        }

        @java.lang.Override
        public SurveyInfo build() {
            return new SurveyInfo(surveyQuestion, surveyAnswer, additionalProperties);
        }
    }
}
