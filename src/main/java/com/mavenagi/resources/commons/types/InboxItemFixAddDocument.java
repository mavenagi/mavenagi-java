/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.mavenagi.resources.commons.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.mavenagi.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = InboxItemFixAddDocument.Builder.class)
public final class InboxItemFixAddDocument implements IInboxItemFixBase {
    private final EntityId id;

    private final String suggestedTextTitle;

    private final String suggestedText;

    private final Map<String, Object> additionalProperties;

    private InboxItemFixAddDocument(
            EntityId id, String suggestedTextTitle, String suggestedText, Map<String, Object> additionalProperties) {
        this.id = id;
        this.suggestedTextTitle = suggestedTextTitle;
        this.suggestedText = suggestedText;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return Unique identifier for the inbox item fix.
     */
    @JsonProperty("id")
    @java.lang.Override
    public EntityId getId() {
        return id;
    }

    /**
     * @return Suggested document title if the fix type is ADD_DOCUMENT.
     */
    @JsonProperty("suggestedTextTitle")
    public String getSuggestedTextTitle() {
        return suggestedTextTitle;
    }

    /**
     * @return Suggested document text if the fix type is ADD_DOCUMENT.
     */
    @JsonProperty("suggestedText")
    public String getSuggestedText() {
        return suggestedText;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof InboxItemFixAddDocument && equalTo((InboxItemFixAddDocument) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(InboxItemFixAddDocument other) {
        return id.equals(other.id)
                && suggestedTextTitle.equals(other.suggestedTextTitle)
                && suggestedText.equals(other.suggestedText);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.id, this.suggestedTextTitle, this.suggestedText);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static IdStage builder() {
        return new Builder();
    }

    public interface IdStage {
        /**
         * <p>Unique identifier for the inbox item fix.</p>
         */
        SuggestedTextTitleStage id(@NotNull EntityId id);

        Builder from(InboxItemFixAddDocument other);
    }

    public interface SuggestedTextTitleStage {
        /**
         * <p>Suggested document title if the fix type is ADD_DOCUMENT.</p>
         */
        SuggestedTextStage suggestedTextTitle(@NotNull String suggestedTextTitle);
    }

    public interface SuggestedTextStage {
        /**
         * <p>Suggested document text if the fix type is ADD_DOCUMENT.</p>
         */
        _FinalStage suggestedText(@NotNull String suggestedText);
    }

    public interface _FinalStage {
        InboxItemFixAddDocument build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements IdStage, SuggestedTextTitleStage, SuggestedTextStage, _FinalStage {
        private EntityId id;

        private String suggestedTextTitle;

        private String suggestedText;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(InboxItemFixAddDocument other) {
            id(other.getId());
            suggestedTextTitle(other.getSuggestedTextTitle());
            suggestedText(other.getSuggestedText());
            return this;
        }

        /**
         * <p>Unique identifier for the inbox item fix.</p>
         * <p>Unique identifier for the inbox item fix.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("id")
        public SuggestedTextTitleStage id(@NotNull EntityId id) {
            this.id = Objects.requireNonNull(id, "id must not be null");
            return this;
        }

        /**
         * <p>Suggested document title if the fix type is ADD_DOCUMENT.</p>
         * <p>Suggested document title if the fix type is ADD_DOCUMENT.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("suggestedTextTitle")
        public SuggestedTextStage suggestedTextTitle(@NotNull String suggestedTextTitle) {
            this.suggestedTextTitle = Objects.requireNonNull(suggestedTextTitle, "suggestedTextTitle must not be null");
            return this;
        }

        /**
         * <p>Suggested document text if the fix type is ADD_DOCUMENT.</p>
         * <p>Suggested document text if the fix type is ADD_DOCUMENT.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("suggestedText")
        public _FinalStage suggestedText(@NotNull String suggestedText) {
            this.suggestedText = Objects.requireNonNull(suggestedText, "suggestedText must not be null");
            return this;
        }

        @java.lang.Override
        public InboxItemFixAddDocument build() {
            return new InboxItemFixAddDocument(id, suggestedTextTitle, suggestedText, additionalProperties);
        }
    }
}
