/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.mavenagi.resources.knowledge;

import com.mavenagi.core.ClientOptions;
import com.mavenagi.core.RequestOptions;
import com.mavenagi.resources.knowledge.requests.KnowledgeBaseGetRequest;
import com.mavenagi.resources.knowledge.types.FinalizeKnowledgeBaseVersionRequest;
import com.mavenagi.resources.knowledge.types.KnowledgeBasePatchRequest;
import com.mavenagi.resources.knowledge.types.KnowledgeBaseRequest;
import com.mavenagi.resources.knowledge.types.KnowledgeBaseResponse;
import com.mavenagi.resources.knowledge.types.KnowledgeBaseSearchRequest;
import com.mavenagi.resources.knowledge.types.KnowledgeBaseVersion;
import com.mavenagi.resources.knowledge.types.KnowledgeBasesResponse;
import com.mavenagi.resources.knowledge.types.KnowledgeDocumentRequest;
import com.mavenagi.resources.knowledge.types.KnowledgeDocumentResponse;
import com.mavenagi.resources.knowledge.types.KnowledgeDocumentSearchRequest;
import com.mavenagi.resources.knowledge.types.KnowledgeDocumentsResponse;

public class KnowledgeClient {
    protected final ClientOptions clientOptions;

    private final RawKnowledgeClient rawClient;

    public KnowledgeClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new RawKnowledgeClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public RawKnowledgeClient withRawResponse() {
        return this.rawClient;
    }

    /**
     * Search knowledge bases
     */
    public KnowledgeBasesResponse searchKnowledgeBases() {
        return this.rawClient.searchKnowledgeBases().body();
    }

    /**
     * Search knowledge bases
     */
    public KnowledgeBasesResponse searchKnowledgeBases(KnowledgeBaseSearchRequest request) {
        return this.rawClient.searchKnowledgeBases(request).body();
    }

    /**
     * Search knowledge bases
     */
    public KnowledgeBasesResponse searchKnowledgeBases(
            KnowledgeBaseSearchRequest request, RequestOptions requestOptions) {
        return this.rawClient.searchKnowledgeBases(request, requestOptions).body();
    }

    /**
     * Update a knowledge base or create it if it doesn't exist.
     */
    public KnowledgeBaseResponse createOrUpdateKnowledgeBase(KnowledgeBaseRequest request) {
        return this.rawClient.createOrUpdateKnowledgeBase(request).body();
    }

    /**
     * Update a knowledge base or create it if it doesn't exist.
     */
    public KnowledgeBaseResponse createOrUpdateKnowledgeBase(
            KnowledgeBaseRequest request, RequestOptions requestOptions) {
        return this.rawClient
                .createOrUpdateKnowledgeBase(request, requestOptions)
                .body();
    }

    /**
     * Get an existing knowledge base by its supplied ID
     */
    public KnowledgeBaseResponse getKnowledgeBase(String knowledgeBaseReferenceId) {
        return this.rawClient.getKnowledgeBase(knowledgeBaseReferenceId).body();
    }

    /**
     * Get an existing knowledge base by its supplied ID
     */
    public KnowledgeBaseResponse getKnowledgeBase(String knowledgeBaseReferenceId, KnowledgeBaseGetRequest request) {
        return this.rawClient
                .getKnowledgeBase(knowledgeBaseReferenceId, request)
                .body();
    }

    /**
     * Get an existing knowledge base by its supplied ID
     */
    public KnowledgeBaseResponse getKnowledgeBase(
            String knowledgeBaseReferenceId, KnowledgeBaseGetRequest request, RequestOptions requestOptions) {
        return this.rawClient
                .getKnowledgeBase(knowledgeBaseReferenceId, request, requestOptions)
                .body();
    }

    /**
     * Update mutable knowledge base fields
     * <p>The <code>appId</code> field can be provided to update a knowledge base owned by a different app.
     * All other fields will overwrite the existing value on the knowledge base only if provided.</p>
     */
    public KnowledgeBaseResponse patchKnowledgeBase(String knowledgeBaseReferenceId) {
        return this.rawClient.patchKnowledgeBase(knowledgeBaseReferenceId).body();
    }

    /**
     * Update mutable knowledge base fields
     * <p>The <code>appId</code> field can be provided to update a knowledge base owned by a different app.
     * All other fields will overwrite the existing value on the knowledge base only if provided.</p>
     */
    public KnowledgeBaseResponse patchKnowledgeBase(
            String knowledgeBaseReferenceId, KnowledgeBasePatchRequest request) {
        return this.rawClient
                .patchKnowledgeBase(knowledgeBaseReferenceId, request)
                .body();
    }

    /**
     * Update mutable knowledge base fields
     * <p>The <code>appId</code> field can be provided to update a knowledge base owned by a different app.
     * All other fields will overwrite the existing value on the knowledge base only if provided.</p>
     */
    public KnowledgeBaseResponse patchKnowledgeBase(
            String knowledgeBaseReferenceId, KnowledgeBasePatchRequest request, RequestOptions requestOptions) {
        return this.rawClient
                .patchKnowledgeBase(knowledgeBaseReferenceId, request, requestOptions)
                .body();
    }

    /**
     * Create a new knowledge base version.
     * <p>If an existing version is in progress, then that version will be finalized in an error state.</p>
     */
    public KnowledgeBaseVersion createKnowledgeBaseVersion(
            String knowledgeBaseReferenceId, KnowledgeBaseVersion request) {
        return this.rawClient
                .createKnowledgeBaseVersion(knowledgeBaseReferenceId, request)
                .body();
    }

    /**
     * Create a new knowledge base version.
     * <p>If an existing version is in progress, then that version will be finalized in an error state.</p>
     */
    public KnowledgeBaseVersion createKnowledgeBaseVersion(
            String knowledgeBaseReferenceId, KnowledgeBaseVersion request, RequestOptions requestOptions) {
        return this.rawClient
                .createKnowledgeBaseVersion(knowledgeBaseReferenceId, request, requestOptions)
                .body();
    }

    /**
     * Finalize the latest knowledge base version. Required to indicate the version is complete. Will throw an exception if the latest version is not in progress.
     */
    public KnowledgeBaseVersion finalizeKnowledgeBaseVersion(String knowledgeBaseReferenceId) {
        return this.rawClient
                .finalizeKnowledgeBaseVersion(knowledgeBaseReferenceId)
                .body();
    }

    /**
     * Finalize the latest knowledge base version. Required to indicate the version is complete. Will throw an exception if the latest version is not in progress.
     */
    public KnowledgeBaseVersion finalizeKnowledgeBaseVersion(
            String knowledgeBaseReferenceId, FinalizeKnowledgeBaseVersionRequest request) {
        return this.rawClient
                .finalizeKnowledgeBaseVersion(knowledgeBaseReferenceId, request)
                .body();
    }

    /**
     * Finalize the latest knowledge base version. Required to indicate the version is complete. Will throw an exception if the latest version is not in progress.
     */
    public KnowledgeBaseVersion finalizeKnowledgeBaseVersion(
            String knowledgeBaseReferenceId,
            FinalizeKnowledgeBaseVersionRequest request,
            RequestOptions requestOptions) {
        return this.rawClient
                .finalizeKnowledgeBaseVersion(knowledgeBaseReferenceId, request, requestOptions)
                .body();
    }

    /**
     * Search knowledge documents
     */
    public KnowledgeDocumentsResponse searchKnowledgeDocuments() {
        return this.rawClient.searchKnowledgeDocuments().body();
    }

    /**
     * Search knowledge documents
     */
    public KnowledgeDocumentsResponse searchKnowledgeDocuments(KnowledgeDocumentSearchRequest request) {
        return this.rawClient.searchKnowledgeDocuments(request).body();
    }

    /**
     * Search knowledge documents
     */
    public KnowledgeDocumentsResponse searchKnowledgeDocuments(
            KnowledgeDocumentSearchRequest request, RequestOptions requestOptions) {
        return this.rawClient.searchKnowledgeDocuments(request, requestOptions).body();
    }

    /**
     * Create knowledge document. Requires an existing knowledge base with an in progress version. Will throw an exception if the latest version is not in progress.
     * <p>&lt;Tip&gt;
     * This API maintains document version history. If for the same reference ID neither the `title` nor `text` fields
     * have changed, a new document version will not be created. The existing version will be reused.
     * &lt;/Tip&gt;</p>
     */
    public KnowledgeDocumentResponse createKnowledgeDocument(
            String knowledgeBaseReferenceId, KnowledgeDocumentRequest request) {
        return this.rawClient
                .createKnowledgeDocument(knowledgeBaseReferenceId, request)
                .body();
    }

    /**
     * Create knowledge document. Requires an existing knowledge base with an in progress version. Will throw an exception if the latest version is not in progress.
     * <p>&lt;Tip&gt;
     * This API maintains document version history. If for the same reference ID neither the `title` nor `text` fields
     * have changed, a new document version will not be created. The existing version will be reused.
     * &lt;/Tip&gt;</p>
     */
    public KnowledgeDocumentResponse createKnowledgeDocument(
            String knowledgeBaseReferenceId, KnowledgeDocumentRequest request, RequestOptions requestOptions) {
        return this.rawClient
                .createKnowledgeDocument(knowledgeBaseReferenceId, request, requestOptions)
                .body();
    }

    /**
     * Not yet implemented. Update knowledge document. Requires an existing knowledge base with an in progress version of type PARTIAL. Will throw an exception if the latest version is not in progress.
     */
    public KnowledgeDocumentResponse updateKnowledgeDocument(
            String knowledgeBaseReferenceId, KnowledgeDocumentRequest request) {
        return this.rawClient
                .updateKnowledgeDocument(knowledgeBaseReferenceId, request)
                .body();
    }

    /**
     * Not yet implemented. Update knowledge document. Requires an existing knowledge base with an in progress version of type PARTIAL. Will throw an exception if the latest version is not in progress.
     */
    public KnowledgeDocumentResponse updateKnowledgeDocument(
            String knowledgeBaseReferenceId, KnowledgeDocumentRequest request, RequestOptions requestOptions) {
        return this.rawClient
                .updateKnowledgeDocument(knowledgeBaseReferenceId, request, requestOptions)
                .body();
    }

    /**
     * Not yet implemented. Delete knowledge document. Requires an existing knowledge base with an in progress version of type PARTIAL. Will throw an exception if the latest version is not in progress.
     */
    public void deleteKnowledgeDocument(String knowledgeBaseReferenceId, String knowledgeDocumentReferenceId) {
        this.rawClient
                .deleteKnowledgeDocument(knowledgeBaseReferenceId, knowledgeDocumentReferenceId)
                .body();
    }

    /**
     * Not yet implemented. Delete knowledge document. Requires an existing knowledge base with an in progress version of type PARTIAL. Will throw an exception if the latest version is not in progress.
     */
    public void deleteKnowledgeDocument(
            String knowledgeBaseReferenceId, String knowledgeDocumentReferenceId, RequestOptions requestOptions) {
        this.rawClient
                .deleteKnowledgeDocument(knowledgeBaseReferenceId, knowledgeDocumentReferenceId, requestOptions)
                .body();
    }
}
