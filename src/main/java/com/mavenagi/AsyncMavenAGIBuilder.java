/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.mavenagi;

import com.mavenagi.core.ClientOptions;
import com.mavenagi.core.Environment;
import java.util.Base64;
import okhttp3.OkHttpClient;

public final class AsyncMavenAGIBuilder {
    private ClientOptions.Builder clientOptionsBuilder = ClientOptions.builder();

    private String appId = System.getenv("MAVENAGI_APP_ID");

    private String appSecret = System.getenv("MAVENAGI_APP_SECRET");

    private String organizationId = null;

    private String agentId = null;

    private Environment environment = Environment.PRODUCTION;

    public AsyncMavenAGIBuilder credentials(String appId, String appSecret) {
        this.appId = appId;
        this.appSecret = appSecret;
        return this;
    }

    /**
     * Sets organizationId
     */
    public AsyncMavenAGIBuilder organizationId(String organizationId) {
        this.organizationId = organizationId;
        return this;
    }

    /**
     * Sets agentId
     */
    public AsyncMavenAGIBuilder agentId(String agentId) {
        this.agentId = agentId;
        return this;
    }

    public AsyncMavenAGIBuilder environment(Environment environment) {
        this.environment = environment;
        return this;
    }

    public AsyncMavenAGIBuilder url(String url) {
        this.environment = Environment.custom(url);
        return this;
    }

    /**
     * Sets the timeout (in seconds) for the client. Defaults to 60 seconds.
     */
    public AsyncMavenAGIBuilder timeout(int timeout) {
        this.clientOptionsBuilder.timeout(timeout);
        return this;
    }

    /**
     * Sets the maximum number of retries for the client. Defaults to 2 retries.
     */
    public AsyncMavenAGIBuilder maxRetries(int maxRetries) {
        this.clientOptionsBuilder.maxRetries(maxRetries);
        return this;
    }

    /**
     * Sets the underlying OkHttp client
     */
    public AsyncMavenAGIBuilder httpClient(OkHttpClient httpClient) {
        this.clientOptionsBuilder.httpClient(httpClient);
        return this;
    }

    public AsyncMavenAGI build() {
        String unencodedToken = appId + ":" + appSecret;
        String encodedToken = Base64.getEncoder().encodeToString(unencodedToken.getBytes());
        this.clientOptionsBuilder.addHeader("Authorization", "Bearer " + encodedToken);
        if (organizationId == null) {
            throw new RuntimeException("Please provide organizationId");
        }
        this.clientOptionsBuilder.addHeader("X-Organization-Id", this.organizationId);
        if (agentId == null) {
            throw new RuntimeException("Please provide agentId");
        }
        this.clientOptionsBuilder.addHeader("X-Agent-Id", this.agentId);
        clientOptionsBuilder.environment(this.environment);
        return new AsyncMavenAGI(clientOptionsBuilder.build());
    }
}
