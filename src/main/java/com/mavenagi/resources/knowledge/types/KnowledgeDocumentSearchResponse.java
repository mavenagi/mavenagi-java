/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.mavenagi.resources.knowledge.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.mavenagi.core.ObjectMappers;
import com.mavenagi.resources.commons.types.EntityId;
import java.time.OffsetDateTime;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = KnowledgeDocumentSearchResponse.Builder.class)
public final class KnowledgeDocumentSearchResponse implements IBaseKnowledgeDocument {
    private final String title;

    private final Optional<String> url;

    private final Optional<String> language;

    private final Optional<OffsetDateTime> createdAt;

    private final Optional<OffsetDateTime> updatedAt;

    private final Optional<String> author;

    private final EntityId knowledgeDocumentId;

    private final Map<String, String> metadata;

    private final Map<String, Object> additionalProperties;

    private KnowledgeDocumentSearchResponse(
            String title,
            Optional<String> url,
            Optional<String> language,
            Optional<OffsetDateTime> createdAt,
            Optional<OffsetDateTime> updatedAt,
            Optional<String> author,
            EntityId knowledgeDocumentId,
            Map<String, String> metadata,
            Map<String, Object> additionalProperties) {
        this.title = title;
        this.url = url;
        this.language = language;
        this.createdAt = createdAt;
        this.updatedAt = updatedAt;
        this.author = author;
        this.knowledgeDocumentId = knowledgeDocumentId;
        this.metadata = metadata;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return The title of the document. Will be shown as part of answers.
     */
    @JsonProperty("title")
    @java.lang.Override
    public String getTitle() {
        return title;
    }

    /**
     * @return The URL of the document. Should be visible to end users. Will be shown as part of answers. Not used for crawling.
     */
    @JsonProperty("url")
    @java.lang.Override
    public Optional<String> getUrl() {
        return url;
    }

    /**
     * @return The document language. Must be a valid ISO 639-1 language code.
     */
    @JsonProperty("language")
    @java.lang.Override
    public Optional<String> getLanguage() {
        return language;
    }

    /**
     * @return The time at which this document was created.
     */
    @JsonProperty("createdAt")
    @java.lang.Override
    public Optional<OffsetDateTime> getCreatedAt() {
        return createdAt;
    }

    /**
     * @return The time at which this document was last modified.
     */
    @JsonProperty("updatedAt")
    @java.lang.Override
    public Optional<OffsetDateTime> getUpdatedAt() {
        return updatedAt;
    }

    /**
     * @return The name of the author who created this document.
     */
    @JsonProperty("author")
    @java.lang.Override
    public Optional<String> getAuthor() {
        return author;
    }

    /**
     * @return ID that uniquely identifies this knowledge document within its knowledge base
     */
    @JsonProperty("knowledgeDocumentId")
    public EntityId getKnowledgeDocumentId() {
        return knowledgeDocumentId;
    }

    /**
     * @return Metadata for the knowledge document.
     */
    @JsonProperty("metadata")
    public Map<String, String> getMetadata() {
        return metadata;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof KnowledgeDocumentSearchResponse && equalTo((KnowledgeDocumentSearchResponse) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(KnowledgeDocumentSearchResponse other) {
        return title.equals(other.title)
                && url.equals(other.url)
                && language.equals(other.language)
                && createdAt.equals(other.createdAt)
                && updatedAt.equals(other.updatedAt)
                && author.equals(other.author)
                && knowledgeDocumentId.equals(other.knowledgeDocumentId)
                && metadata.equals(other.metadata);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(
                this.title,
                this.url,
                this.language,
                this.createdAt,
                this.updatedAt,
                this.author,
                this.knowledgeDocumentId,
                this.metadata);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static TitleStage builder() {
        return new Builder();
    }

    public interface TitleStage {
        /**
         * <p>The title of the document. Will be shown as part of answers.</p>
         */
        KnowledgeDocumentIdStage title(@NotNull String title);

        Builder from(KnowledgeDocumentSearchResponse other);
    }

    public interface KnowledgeDocumentIdStage {
        /**
         * <p>ID that uniquely identifies this knowledge document within its knowledge base</p>
         */
        _FinalStage knowledgeDocumentId(@NotNull EntityId knowledgeDocumentId);
    }

    public interface _FinalStage {
        KnowledgeDocumentSearchResponse build();

        /**
         * <p>The URL of the document. Should be visible to end users. Will be shown as part of answers. Not used for crawling.</p>
         */
        _FinalStage url(Optional<String> url);

        _FinalStage url(String url);

        /**
         * <p>The document language. Must be a valid ISO 639-1 language code.</p>
         */
        _FinalStage language(Optional<String> language);

        _FinalStage language(String language);

        /**
         * <p>The time at which this document was created.</p>
         */
        _FinalStage createdAt(Optional<OffsetDateTime> createdAt);

        _FinalStage createdAt(OffsetDateTime createdAt);

        /**
         * <p>The time at which this document was last modified.</p>
         */
        _FinalStage updatedAt(Optional<OffsetDateTime> updatedAt);

        _FinalStage updatedAt(OffsetDateTime updatedAt);

        /**
         * <p>The name of the author who created this document.</p>
         */
        _FinalStage author(Optional<String> author);

        _FinalStage author(String author);

        /**
         * <p>Metadata for the knowledge document.</p>
         */
        _FinalStage metadata(Map<String, String> metadata);

        _FinalStage putAllMetadata(Map<String, String> metadata);

        _FinalStage metadata(String key, String value);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements TitleStage, KnowledgeDocumentIdStage, _FinalStage {
        private String title;

        private EntityId knowledgeDocumentId;

        private Map<String, String> metadata = new LinkedHashMap<>();

        private Optional<String> author = Optional.empty();

        private Optional<OffsetDateTime> updatedAt = Optional.empty();

        private Optional<OffsetDateTime> createdAt = Optional.empty();

        private Optional<String> language = Optional.empty();

        private Optional<String> url = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(KnowledgeDocumentSearchResponse other) {
            title(other.getTitle());
            url(other.getUrl());
            language(other.getLanguage());
            createdAt(other.getCreatedAt());
            updatedAt(other.getUpdatedAt());
            author(other.getAuthor());
            knowledgeDocumentId(other.getKnowledgeDocumentId());
            metadata(other.getMetadata());
            return this;
        }

        /**
         * <p>The title of the document. Will be shown as part of answers.</p>
         * <p>The title of the document. Will be shown as part of answers.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("title")
        public KnowledgeDocumentIdStage title(@NotNull String title) {
            this.title = Objects.requireNonNull(title, "title must not be null");
            return this;
        }

        /**
         * <p>ID that uniquely identifies this knowledge document within its knowledge base</p>
         * <p>ID that uniquely identifies this knowledge document within its knowledge base</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("knowledgeDocumentId")
        public _FinalStage knowledgeDocumentId(@NotNull EntityId knowledgeDocumentId) {
            this.knowledgeDocumentId =
                    Objects.requireNonNull(knowledgeDocumentId, "knowledgeDocumentId must not be null");
            return this;
        }

        /**
         * <p>Metadata for the knowledge document.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage metadata(String key, String value) {
            this.metadata.put(key, value);
            return this;
        }

        /**
         * <p>Metadata for the knowledge document.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage putAllMetadata(Map<String, String> metadata) {
            this.metadata.putAll(metadata);
            return this;
        }

        /**
         * <p>Metadata for the knowledge document.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "metadata", nulls = Nulls.SKIP)
        public _FinalStage metadata(Map<String, String> metadata) {
            this.metadata.clear();
            this.metadata.putAll(metadata);
            return this;
        }

        /**
         * <p>The name of the author who created this document.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage author(String author) {
            this.author = Optional.ofNullable(author);
            return this;
        }

        /**
         * <p>The name of the author who created this document.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "author", nulls = Nulls.SKIP)
        public _FinalStage author(Optional<String> author) {
            this.author = author;
            return this;
        }

        /**
         * <p>The time at which this document was last modified.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage updatedAt(OffsetDateTime updatedAt) {
            this.updatedAt = Optional.ofNullable(updatedAt);
            return this;
        }

        /**
         * <p>The time at which this document was last modified.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "updatedAt", nulls = Nulls.SKIP)
        public _FinalStage updatedAt(Optional<OffsetDateTime> updatedAt) {
            this.updatedAt = updatedAt;
            return this;
        }

        /**
         * <p>The time at which this document was created.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage createdAt(OffsetDateTime createdAt) {
            this.createdAt = Optional.ofNullable(createdAt);
            return this;
        }

        /**
         * <p>The time at which this document was created.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "createdAt", nulls = Nulls.SKIP)
        public _FinalStage createdAt(Optional<OffsetDateTime> createdAt) {
            this.createdAt = createdAt;
            return this;
        }

        /**
         * <p>The document language. Must be a valid ISO 639-1 language code.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage language(String language) {
            this.language = Optional.ofNullable(language);
            return this;
        }

        /**
         * <p>The document language. Must be a valid ISO 639-1 language code.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "language", nulls = Nulls.SKIP)
        public _FinalStage language(Optional<String> language) {
            this.language = language;
            return this;
        }

        /**
         * <p>The URL of the document. Should be visible to end users. Will be shown as part of answers. Not used for crawling.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage url(String url) {
            this.url = Optional.ofNullable(url);
            return this;
        }

        /**
         * <p>The URL of the document. Should be visible to end users. Will be shown as part of answers. Not used for crawling.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "url", nulls = Nulls.SKIP)
        public _FinalStage url(Optional<String> url) {
            this.url = url;
            return this;
        }

        @java.lang.Override
        public KnowledgeDocumentSearchResponse build() {
            return new KnowledgeDocumentSearchResponse(
                    title,
                    url,
                    language,
                    createdAt,
                    updatedAt,
                    author,
                    knowledgeDocumentId,
                    metadata,
                    additionalProperties);
        }
    }
}
