/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.mavenagi.api.resources.conversation.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.mavenagi.api.core.ObjectMappers;
import com.mavenagi.api.resources.commons.types.EntityId;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = BotActionResponse.Builder.class)
public final class BotActionResponse {
    private final EntityId actionId;

    private final Map<String, Object> actionParameters;

    private final String actionResponse;

    private final boolean autoAction;

    private final Optional<String> actionError;

    private final Map<String, Object> additionalProperties;

    private BotActionResponse(
            EntityId actionId,
            Map<String, Object> actionParameters,
            String actionResponse,
            boolean autoAction,
            Optional<String> actionError,
            Map<String, Object> additionalProperties) {
        this.actionId = actionId;
        this.actionParameters = actionParameters;
        this.actionResponse = actionResponse;
        this.autoAction = autoAction;
        this.actionError = actionError;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("actionId")
    public EntityId getActionId() {
        return actionId;
    }

    @JsonProperty("actionParameters")
    public Map<String, Object> getActionParameters() {
        return actionParameters;
    }

    @JsonProperty("actionResponse")
    public String getActionResponse() {
        return actionResponse;
    }

    /**
     * @return True if the bot automatically took this action. False if the user manually submitted the actionForm.
     */
    @JsonProperty("autoAction")
    public boolean getAutoAction() {
        return autoAction;
    }

    @JsonProperty("actionError")
    public Optional<String> getActionError() {
        return actionError;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof BotActionResponse && equalTo((BotActionResponse) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(BotActionResponse other) {
        return actionId.equals(other.actionId)
                && actionParameters.equals(other.actionParameters)
                && actionResponse.equals(other.actionResponse)
                && autoAction == other.autoAction
                && actionError.equals(other.actionError);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(
                this.actionId, this.actionParameters, this.actionResponse, this.autoAction, this.actionError);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static ActionIdStage builder() {
        return new Builder();
    }

    public interface ActionIdStage {
        ActionResponseStage actionId(@NotNull EntityId actionId);

        Builder from(BotActionResponse other);
    }

    public interface ActionResponseStage {
        AutoActionStage actionResponse(@NotNull String actionResponse);
    }

    public interface AutoActionStage {
        _FinalStage autoAction(boolean autoAction);
    }

    public interface _FinalStage {
        BotActionResponse build();

        _FinalStage actionParameters(Map<String, Object> actionParameters);

        _FinalStage putAllActionParameters(Map<String, Object> actionParameters);

        _FinalStage actionParameters(String key, Object value);

        _FinalStage actionError(Optional<String> actionError);

        _FinalStage actionError(String actionError);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements ActionIdStage, ActionResponseStage, AutoActionStage, _FinalStage {
        private EntityId actionId;

        private String actionResponse;

        private boolean autoAction;

        private Optional<String> actionError = Optional.empty();

        private Map<String, Object> actionParameters = new LinkedHashMap<>();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(BotActionResponse other) {
            actionId(other.getActionId());
            actionParameters(other.getActionParameters());
            actionResponse(other.getActionResponse());
            autoAction(other.getAutoAction());
            actionError(other.getActionError());
            return this;
        }

        @java.lang.Override
        @JsonSetter("actionId")
        public ActionResponseStage actionId(@NotNull EntityId actionId) {
            this.actionId = Objects.requireNonNull(actionId, "actionId must not be null");
            return this;
        }

        @java.lang.Override
        @JsonSetter("actionResponse")
        public AutoActionStage actionResponse(@NotNull String actionResponse) {
            this.actionResponse = Objects.requireNonNull(actionResponse, "actionResponse must not be null");
            return this;
        }

        /**
         * <p>True if the bot automatically took this action. False if the user manually submitted the actionForm.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("autoAction")
        public _FinalStage autoAction(boolean autoAction) {
            this.autoAction = autoAction;
            return this;
        }

        @java.lang.Override
        public _FinalStage actionError(String actionError) {
            this.actionError = Optional.ofNullable(actionError);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "actionError", nulls = Nulls.SKIP)
        public _FinalStage actionError(Optional<String> actionError) {
            this.actionError = actionError;
            return this;
        }

        @java.lang.Override
        public _FinalStage actionParameters(String key, Object value) {
            this.actionParameters.put(key, value);
            return this;
        }

        @java.lang.Override
        public _FinalStage putAllActionParameters(Map<String, Object> actionParameters) {
            this.actionParameters.putAll(actionParameters);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "actionParameters", nulls = Nulls.SKIP)
        public _FinalStage actionParameters(Map<String, Object> actionParameters) {
            this.actionParameters.clear();
            this.actionParameters.putAll(actionParameters);
            return this;
        }

        @java.lang.Override
        public BotActionResponse build() {
            return new BotActionResponse(
                    actionId, actionParameters, actionResponse, autoAction, actionError, additionalProperties);
        }
    }
}
